#Author: Emanuel Durmaz
####################################################################################################################
# Requirements for Sandbox VM:
#
# - sshd must autostart (check windows services configs)
# - insert public ssh key in authorized_keys
#
# Recommendations
# - VM hardening with https://github.com/nsmfoo/antivmdetection
# - disable UAC, Firewall, Windows Defender (via group policy)
# - user must not have an empty password (required if you use PSExec)
# - configure autologin for user (only required if you want to watch the execution)
#
####################################################################################################################
#
# Host config if MitmProxy used (no worries, those are not permanent changes. They are gone after system restart ):
#
# sudo sysctl -w net.ipv4.ip_forward=1
# sudo sysctl -w net.ipv6.conf.all.forwarding=1
#
# sudo sysctl -w net.ipv4.conf.all.send_redirects=0
#
# Use Host-only networking mode for vbox vm with vboxnet0 interface
#
# Redirect HTTP/S traffic to MitmProxy (is going to be listening on 8080 on host, via this python script)
#
# sudo iptables -t nat -A PREROUTING -i vboxnet0 -p tcp --dport 80 -j REDIRECT --to-port 8080
# sudo iptables -t nat -A PREROUTING -i vboxnet0 -p tcp --dport 443 -j REDIRECT --to-port 8080
# sudo ip6tables -t nat -A PREROUTING -i vboxnet0 -p tcp --dport 80 -j REDIRECT --to-port 8080
# sudo ip6tables -t nat -A PREROUTING -i vboxnet0 -p tcp --dport 443 -j REDIRECT --to-port 8080
#
# Forward all other traffic
#
# sudo iptables -A FORWARD -o eth0 -i vboxnet0 -s 192.168.0.15/24 -m conntrack --ctstate NEW -j ACCEPT
# sudo iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
# sudo iptables -A POSTROUTING -t nat -j MASQUERADE
#
# Make sure to use static IP config inside the VM, so you dont need DHCP Server
# And use 8.8.8.8, 8.8.4.4 as DNS-Server
#
####################################################################################################################
#
# Alternatively you can use external DNS-management + DHCP with dnsmasq on Host-System
#
# sudo apt install dnsmasq
# ###########################
# Add then these lines to /etc/dnsmasq.conf
##
# domain-needed
# log-queries
# interface=vboxnet0
#
# dhcp-range=192.168.0.2,192.168.0.254,96h
# dhcp-option=option:router,192.168.0.1
# dhcp-option=option:dns-server,192.168.0.1
#
####################################################################################################################

import sandboxLib, sampleProcessingRoutines, setup, helpers, mitmProxyController, time,utils


import time
import threading
from threading import Thread
import asyncio


####################### INIT #######################
#sampleRepoPath = "/home/user/SampleRepoFix/"
#sampleRepoPath = "/home/user/SAMPLE_SETS_PREPARED/TESTSET/"
sampleRepoPath = "/home/user/SAMPLE_SETS_PREPARED/EVALSET/"
config = setup.config.copy()
print(config)

sandboxLib.EXECUTE_SAMPLES = True


preProc = sampleProcessingRoutines.preProcessingRoutine
postProc = sampleProcessingRoutines.postProcessingRoutine
execRoutine = sampleProcessingRoutines.executeRoutine

# ####################### 1. START #######################
config["downloadLocalDirAfterProcessing"] = "/media/user/HDD2/SampleLogs_Normal/"
config["loggerName"] = "SandboxAnalysis_Normal"
sandboxLib.setGlobalLogger(config)
sampleProcessingRoutines.logger = sandboxLib.logger
sProcessor = sandboxLib.SampleProcessor(preProc, postProc, execRoutine, config)
# ####################### 1. MAIN #######################
sProcessor.runSampleProcessing(sampleRepoPath)

# #
# # ####################### 2. START #######################
# config["enableCnCsimulation"] = False
# config["downloadLocalDirAfterProcessing"] = "/media/user/HDD2/SampleLogs_NoCncSim/"
# config["loggerName"] = "SandboxAnalysis_NoCncSim"
# sandboxLib.setGlobalLogger(config)
# sampleProcessingRoutines.logger = sandboxLib.logger
# sProcessor = sandboxLib.SampleProcessor(preProc, postProc, execRoutine, config)
# # ####################### 2. MAIN #######################
# sProcessor.runSampleProcessing(sampleRepoPath)
#
#
# ####################### 3. START #######################
# sampleProcessingRoutines.removeWindowInteraction()
# config["enableCnCsimulation"] = False
# config["downloadLocalDirAfterProcessing"] = "/media/user/HDD2/SampleLogs_NoCncSim_NoWindowInt/"
# config["loggerName"] = "SandboxAnalysis_NoCncSim_NoWindowInt"
#
# sandboxLib.setGlobalLogger(config)
# sampleProcessingRoutines.logger = sandboxLib.logger
# sProcessor = sandboxLib.SampleProcessor(preProc, postProc, execRoutine, config)
# # ####################### 3. MAIN #######################
# sProcessor.runSampleProcessing(sampleRepoPath)



#sampleProcessingRoutines.removeWalletProtection()
#sampleProcessingRoutines.removeWindowInteraction()


####################################################

#sandboxLib.setGlobalLogger(config)
#sampleProcessingRoutines.logger = sandboxLib.logger
#sProcessor = sandboxLib.SampleProcessor(preProc, postProc, execRoutine, config)
# sProcessor.runSampleProcessing(sampleRepoPath)

####################### Examples #######################

########## Other Examples
#sb = sProcessor.sandbox
#sb.start() #always start sandbox before using functions
# sb.virtualMachine.startvm()
# sb.virtualMachine.poweroff()
# sb.virtualMachine.restore(snapshotName)
# sb.runExecutable("/home/user/VMShare/Samples/ArkeiStealer/0ecdc90fd7cab0cd0d18e607827b134ece75012532f5eb81605d7e79cd4c185c")
# sb.sshClient.execute("dir")
# sb.sshClient.execute("ipconfig")
# sb.sftpClient.uploadFile("/home/user/test.txt", "C:/Users/user/Desktop/text.txt")
#sb.sftpClient.downloadFile("C:/Users/user/Desktop/text.txt", "/home/user/blabla33.txt")
# sb.sftpClient.downloadDir("C:/Users/user/Desktop/package/", "/home/user/testthis/")
#sb.upload("/home/user/SampleRepoTest/hunt_AZORult_3_2/0a4b39dc480562c7a68e9c5f075b606567a8440c3797588f26625e3935613061")





#sProcessor.runSampleProcessing("/home/user/SampleRepo/hunt_EvrialStealer/")
#sProcessor.runSampleProcessing("/home/user/SampleRepoTest/")
#sProcessor.runSampleProcessing("/home/user/SampleQuickRepo/")
#sProcessor.runSampleProcessing("/home/user/SampleRepo/")

#sProcessor.singleSampleProcessing("/home/user/VMShare/Samples/AZORult_variant2/d8ffb67c008e424077c7292bb58ac74c9dfd4e818af950a89a3112e987e41424_unpacked")
#sProcessor.singleSampleProcessing("/home/user/SampleRepo/hunt_ArkeiStealer/6d5e8356589bfe719fd5b9d5146373334f3e5203ce307a1380641c853e0c3562")
#sProcessor.singleSampleProcessing("/home/user/SampleRepoTest/AZORult_variant1/build.exe")


#sProcessor.singleSampleProcessing("/home/user/VMShare/bin.exe")

#sProcessor.singleSampleProcessing("/home/user/SampleRepoTest/Evrial/9edd8f0e22340ecc45c5f09e449aa85d196f3f506ff3f44275367df924b95c5d")
#sProcessor.singleSampleProcessing("/home/user/SampleRepoTest/hunt_AZORult_3_2/a357e8ed9469af318c1d816327401859bd42ad36b58ad4e94f605de267a03e0c")
#sProcessor.singleSampleProcessing("/home/user/SampleRepoClipboardTest/BitcoinStealer_Jigsaw/454280128478d0da357e8609d5bef43a601ba18582a96678c0d5e60ceb9b08aa")
